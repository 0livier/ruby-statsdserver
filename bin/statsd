#!/usr/bin/env ruby


require "rubygems"
require "bundler/setup"

require "parseconfig"
require "statsdserver"
require "statsdserver/output/stdout"
require "statsdserver/output/tcp"
require "sysexits"

include Sysexits
progname = File.basename($0)

if ARGV.length != 1
  $stderr.puts "usage: #{progname} path_to_config"
  exit EX_USAGE
end

config_path = ARGV.shift
begin
  config_file = ParseConfig.new(config_path)
rescue
  $stderr.puts "#{progname}: error reading #{config_path}: #{$!}"
  exit EX_DATAERR
end

config = {}
%w(daemonize bind port flush_interval outputs prefix percentile
   suffix).each do |key|
  config[key.to_sym] = config_file[key] if config_file[key]
end

if config[:outputs].nil? || config[:outputs].empty?
  $stderr.puts "#{progname}: no outputs specified"
  exit EX_DATAERR
end

outputs = []
config[:outputs].split(/, */).each do |output|
  klass = StatsdServer::Output.const_get(output.capitalize)
  if klass.nil?
    $stderr.puts "#{progname}: unknown output #{output.inspect}"
    exit EX_DATAERR
  end
  output_config = config_file["output:#{output}"] || {}
  outputs << klass.new(output_config)
end

EM.run do
  StatsdServer.run(config, outputs)
end
